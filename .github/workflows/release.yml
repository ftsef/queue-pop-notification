name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            extension: .exe
            os_name: windows-amd64
          - goos: darwin
            goarch: amd64
            extension: ""
            os_name: macos-intel
          - goos: darwin
            goarch: arm64
            extension: ""
            os_name: macos-arm64
          - goos: linux
            goarch: amd64
            extension: ""
            os_name: linux-amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.5'
        
    - name: Get dependencies
      run: |
        cd cmd/qpn
        go mod tidy
        
    - name: Build for ${{ matrix.os_name }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        cd cmd/qpn
        go build -o qpn-${{ matrix.os_name }}${{ matrix.extension }}
        
    - name: Create Release Archive
      run: |
        mkdir release-${{ matrix.os_name }}
        cp cmd/qpn/qpn-${{ matrix.os_name }}${{ matrix.extension }} release-${{ matrix.os_name }}/
        cp config.yaml.dist release-${{ matrix.os_name }}/
        cp README.md release-${{ matrix.os_name }}/
        
    - name: Archive Release
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          cd release-${{ matrix.os_name }} && zip -r ../queue-pop-notification-${{ matrix.os_name }}-${{ github.ref_name }}.zip .
        else
          tar -czf queue-pop-notification-${{ matrix.os_name }}-${{ github.ref_name }}.tar.gz -C release-${{ matrix.os_name }} .
        fi
    - name: Upload Release Assets
      uses: actions/upload-artifact@v4
      with:
        name: queue-pop-notification-${{ matrix.os_name }}-${{ github.ref_name }}
        path: |
          queue-pop-notification-${{ matrix.os_name }}-${{ github.ref_name }}.zip
          queue-pop-notification-${{ matrix.os_name }}-${{ github.ref_name }}.tar.gz

  create-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Get contributors since last release
      id: contributors
      run: |
        # Get the previous tag
        previousTag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$previousTag" ]; then
          contributors=$(git log --pretty=format:"%an" $previousTag..HEAD | sort | uniq)
        else
          contributors=$(git log --pretty=format:"%an" | sort | uniq)
        fi
        contributorList=$(echo "$contributors" | sed 's/^/- @/' | tr '\n' '\n')
        echo "contributors<<EOF" >> $GITHUB_OUTPUT
        echo "$contributorList" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Queue Pop Notification ${{ github.ref_name }}
        body: |
          ### Downloads available for:
          - **Windows**: `queue-pop-notification-windows-amd64-${{ github.ref_name }}.zip`
          - **macOS Intel**: `queue-pop-notification-macos-intel-${{ github.ref_name }}.tar.gz`
          - **macOS Apple Silicon**: `queue-pop-notification-macos-arm64-${{ github.ref_name }}.tar.gz`
          - **Linux**: `queue-pop-notification-linux-amd64-${{ github.ref_name }}.tar.gz`
          
          ### What's included:
          - Main executable (`qpn.exe` for Windows, `qpn-macos-intel`/`qpn-macos-arm64`/`qpn-linux-amd64` for Unix)
          - `config.yaml.dist` - Configuration file template
          - `README.md` - Documentation
          
          ### Installation:
          1. Download the appropriate file for your operating system
          2. Extract the archive
          3. Rename `config.yaml.dist` to `config.yaml` and edit it with your Discord webhook URL and WoW path
          4. Start the application by running `qpn.exe` (Windows) or `./qpn-macos-intel`/`./qpn-macos-arm64`/`./qpn-linux-amd64` (Unix)
          
          ### Requirements:
          - World of Warcraft with QueueNotify addon installed
          
          ### Contributors:
          ${{ steps.contributors.outputs.contributors }}
          
          Thank you to all contributors who made this release possible! ðŸŽ‰
        draft: false
        prerelease: false
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./queue-pop-notification-windows-amd64-${{ github.ref_name }}/queue-pop-notification-windows-amd64-${{ github.ref_name }}.zip
        asset_name: queue-pop-notification-windows-amd64-${{ github.ref_name }}.zip
        asset_content_type: application/zip
        
    - name: Upload macOS Intel Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./queue-pop-notification-macos-intel-${{ github.ref_name }}/queue-pop-notification-macos-intel-${{ github.ref_name }}.tar.gz
        asset_name: queue-pop-notification-macos-intel-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload macOS ARM64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./queue-pop-notification-macos-arm64-${{ github.ref_name }}/queue-pop-notification-macos-arm64-${{ github.ref_name }}.tar.gz
        asset_name: queue-pop-notification-macos-arm64-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./queue-pop-notification-linux-amd64-${{ github.ref_name }}/queue-pop-notification-linux-amd64-${{ github.ref_name }}.tar.gz
        asset_name: queue-pop-notification-linux-amd64-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip